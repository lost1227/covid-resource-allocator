plugins {
    id 'base'
    id("com.github.node-gradle.node") version "2.2.3"
}

node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */
    version = '12.16.1'
    npmVersion = '6.13.4'
    download = true
}

task packageNpmApp(type: Zip) {
    dependsOn npm_run_build
    baseName "${rootProject.ngArtifact}"
    extension 'jar'
    destinationDir file("${projectDir}/dist")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static'
    }
}

sonarqube {
    properties {
        property "sonar.sources", "src"
        property "sonar.tests", "src"
        property "sonar.exclusions", "**/*.spec.ts,src/test.ts,src/main.ts,**/*.prod.ts"
        property "sonar.test.inclusions", "**/*.spec.js"
        property "sonar.javascript.lcov.reportPaths", "coverage/ng-cora/lcov.info"
    }
}

npm_run_test {
    args = ['--', '--no-watch', '--no-progress', '--browsers=ChromeHeadlessCI']
}

npm_run_e2e {
    args = ['--', '--protractor-config=e2e/protractor-ci.conf.js']
}

project.parent.tasks["sonarqube"].dependsOn "ui:npm_run_test", "ui:npm_run_e2e"

configurations {
    npmResources
}
configurations.default.extendsFrom(configurations.npmResources)
assemble.dependsOn packageNpmApp

artifacts {
    npmResources(packageNpmApp.archivePath) {
        builtBy packageNpmApp
        type "jar"
    }
}

clean {
    delete packageNpmApp.archivePath
    delete file("${projectDir}/dist")
}